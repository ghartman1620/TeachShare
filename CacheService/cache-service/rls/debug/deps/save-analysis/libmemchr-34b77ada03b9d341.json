{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"memchr","disambiguator":[1922966407542116264,10982176376012973570]},"crate_root":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src","external_crates":[{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15457747332785279848,2321850194859987339]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15868474213044323624,2444462643878075336]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8458891086083892067,8748117807113040734]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[767489389527341057,5235531157453730766]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[18110415425518651545,18006836507566872508]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7789913747131704681,15383421434934411168]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13641195905247684855,10390215052031693935]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[6546252056220169788,18379399819183232084]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18001143091758731311,4733760878430807864]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":10,"id":{"name":"libc","disambiguator":[9795921507606627722,5163658886396158850]}}],"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":96}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe\ninterface to the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2837,"byte_end":2843,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" An iterator for memchr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3080,"byte_end":3083,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr<'a>>::new","value":"fn (needle: u8, haystack: &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4316,"byte_end":4322,"line_start":162,"line_end":162,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4262,"byte_end":4279,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6381,"byte_end":6388,"line_start":221,"line_end":221,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"fn (needle: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6327,"byte_end":6344,"line_start":220,"line_end":220,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7795,"byte_end":7802,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39}],"decl_id":null,"docs":" An iterator for Memchr2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8058,"byte_end":8061,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2<'a>>::new","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8629,"byte_end":8636,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"fn (needle1: u8, needle2: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9781,"byte_end":9788,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59}],"decl_id":null,"docs":" An iterator for Memchr3\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10052,"byte_end":10055,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3<'a>>::new","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new Memchr2 that's initalized to zero with a haystack\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10754,"byte_end":10761,"line_start":373,"line_end":373,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"fn (needle1: u8, needle2: u8, needle3: u8, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2976,"byte_end":2982,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3268,"byte_end":3274,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3549,"byte_end":3555,"line_start":136,"line_end":136,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7953,"byte_end":7960,"line_start":269,"line_end":269,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8294,"byte_end":8301,"line_start":281,"line_end":281,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9956,"byte_end":9963,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10370,"byte_end":10377,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2976,"byte_end":2982,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3268,"byte_end":3274,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3549,"byte_end":3555,"line_start":136,"line_end":136,"column_start":34,"column_end":40},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":4252}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7953,"byte_end":7960,"line_start":269,"line_end":269,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8294,"byte_end":8301,"line_start":281,"line_end":281,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":64},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9956,"byte_end":9963,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,99,104,114,45,50,46,48,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10370,"byte_end":10377,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":82},"to":{"krate":2,"index":3842}}]}