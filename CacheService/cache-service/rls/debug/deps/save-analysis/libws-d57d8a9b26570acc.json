{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"ws","disambiguator":[16367959354448839437,7487122377180394684]},"crate_root":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src","external_crates":[{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15457747332785279848,2321850194859987339]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15868474213044323624,2444462643878075336]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8458891086083892067,8748117807113040734]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[767489389527341057,5235531157453730766]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[18110415425518651545,18006836507566872508]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7789913747131704681,15383421434934411168]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13641195905247684855,10390215052031693935]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[6546252056220169788,18379399819183232084]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18001143091758731311,4733760878430807864]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":10,"id":{"name":"httparse","disambiguator":[15817368009979878951,5023737374398511995]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":11,"id":{"name":"mio","disambiguator":[1419475730474962612,14039700371795233264]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":12,"id":{"name":"lazycell","disambiguator":[2557592772306808037,12733363344801348341]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":13,"id":{"name":"net2","disambiguator":[6384054515934212981,1451365037679047431]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":14,"id":{"name":"libc","disambiguator":[9795921507606627722,5163658886396158850]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[1118490139373986064,12434004489676140572]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":16,"id":{"name":"iovec","disambiguator":[12077391816125042474,17427626936466427554]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":17,"id":{"name":"slab","disambiguator":[18221043116147414973,2609950161727611952]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":18,"id":{"name":"log","disambiguator":[8792986137009576364,15862713955512328174]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":19,"id":{"name":"sha1","disambiguator":[15710711923794228059,13916349679523118828]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":20,"id":{"name":"rand","disambiguator":[3045774485897474649,8161278689663118196]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":21,"id":{"name":"url","disambiguator":[1024816494473002999,10820715290054582738]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":22,"id":{"name":"matches","disambiguator":[14324638739921405190,6147503615587502915]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":23,"id":{"name":"idna","disambiguator":[8536207689682901115,6513893767281960894]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":24,"id":{"name":"unicode_bidi","disambiguator":[10801636772273166211,5904393062133874756]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":25,"id":{"name":"unicode_normalization","disambiguator":[18409103700773640156,14696749188936703114]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":26,"id":{"name":"percent_encoding","disambiguator":[12895168521357491311,3950076030172583157]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":27,"id":{"name":"slab","disambiguator":[5483611644210792733,2572792210224775440]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":28,"id":{"name":"bytes","disambiguator":[1360682361328737542,16696350305241693139]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","num":29,"id":{"name":"byteorder","disambiguator":[8557728459868100810,11949801672017624386]}}],"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":13582,"line_start":1,"line_end":383,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":11,"index":3168},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":183384,"byte_end":183389,"line_start":5,"line_end":5,"column_start":14,"column_end":19},"name":"Token","value":"","parent":{"krate":0,"index":1042}},{"kind":"Use","ref_id":{"krate":11,"index":3210},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":183447,"byte_end":183454,"line_start":7,"line_end":7,"column_start":21,"column_end":28},"name":"Timeout","value":"","parent":{"krate":0,"index":1042}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":679,"byte_end":686,"line_start":37,"line_end":37,"column_start":18,"column_end":25},"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":705,"byte_end":712,"line_start":38,"line_end":38,"column_start":18,"column_end":25},"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":732,"byte_end":738,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":740,"byte_end":745,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1132},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":772,"byte_end":781,"line_start":41,"line_end":41,"column_start":25,"column_end":34},"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":800,"byte_end":807,"line_start":42,"line_end":42,"column_start":18,"column_end":25},"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":832,"byte_end":838,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"name":"Sender","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":855,"byte_end":860,"line_start":44,"line_end":44,"column_start":16,"column_end":21},"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1260},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":881,"byte_end":890,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"name":"CloseCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":892,"byte_end":898,"line_start":45,"line_end":45,"column_start":31,"column_end":37},"name":"OpCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":921,"byte_end":930,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"name":"Handshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":932,"byte_end":939,"line_start":46,"line_end":46,"column_start":32,"column_end":39},"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":941,"byte_end":949,"line_start":46,"line_end":46,"column_start":41,"column_end":49},"name":"Response","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":13582,"line_start":1,"line_end":383,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":98},{"krate":0,"index":248},{"krate":0,"index":342},{"krate":0,"index":404},{"krate":0,"index":514},{"krate":0,"index":580},{"krate":0,"index":722},{"krate":0,"index":764},{"krate":0,"index":830},{"krate":0,"index":976},{"krate":0,"index":1042},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1076},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1320},{"krate":0,"index":1328},{"krate":0,"index":1324},{"krate":0,"index":1322},{"krate":0,"index":1102},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1332},{"krate":0,"index":1340},{"krate":0,"index":1336},{"krate":0,"index":1334},{"krate":0,"index":1124}],"decl_id":null,"docs":" Lightweight, event-driven WebSockets for Rust.\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51,"byte_end":72,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"deny(missing_copy_implementations,\n       trivial_casts,\n       trivial_numeric_casts,\n       unstable_features,\n       unused_import_braces)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73,"byte_end":207,"line_start":3,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":14008,"byte_end":14014,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::result::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":14409,"byte_end":14417,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Internal","qualname":"::result::Kind::Internal","value":"Kind::Internal","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates an internal application error.\n If panic_on_internal is true, which is the default, then the application will panic. \n Otherwise the WebSocket will automatically attempt to send an Error (1011) close code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":14673,"byte_end":14681,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::result::Kind::Capacity","value":"Kind::Capacity","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates a state where some size limit has been exceeded, such as an inability to accept\n any more new connections.\n If a Connection is active, the WebSocket will automatically attempt to send\n a Size (1009) close code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":14923,"byte_end":14931,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::result::Kind::Protocol","value":"Kind::Protocol","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates a violation of the WebSocket protocol.\n The WebSocket will automatically attempt to send a Protocol (1002) close code, or if\n this error occurs during a handshake, an HTTP 400 response will be generated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":15142,"byte_end":15150,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::result::Kind::Encoding","value":"Kind::Encoding(Utf8Error)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates that the WebSocket received data that should be utf8 encoded but was not.\n The WebSocket will automatically attempt to send a Invalid Frame Payload Data (1007) close\n code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":15289,"byte_end":15291,"line_start":42,"line_end":42,"column_start":5,"column_end":7},"name":"Io","qualname":"::result::Kind::Io","value":"Kind::Io(io::Error)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates an underlying IO Error.\n This kind of error will result in a WebSocket Connection disconnecting.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":15488,"byte_end":15492,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Http","qualname":"::result::Kind::Http","value":"Kind::Http(httparse::Error)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates a failure to parse an HTTP message.\n This kind of error should only occur during a WebSocket Handshake, and a HTTP 500 response\n will be generated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":15936,"byte_end":15941,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Queue","qualname":"::result::Kind::Queue","value":"Kind::Queue(mio::channel::SendError<Command>)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates a failure to send a signal on the internal EventLoop channel. This means that\n the WebSocket is overloaded. In order to avoid this error, it is important to set\n `Settings::max_connections` and `Settings:queue_size` high enough to handle the load.\n If encountered, retuning from a handler method and waiting for the EventLoop to consume\n the queue may relieve the situation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16049,"byte_end":16054,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Timer","qualname":"::result::Kind::Timer","value":"Kind::Timer(mio::timer::TimerError)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" Indicates a failure to schedule a timeout on the EventLoop.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16550,"byte_end":16556,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Custom","qualname":"::result::Kind::Custom","value":"Kind::Custom(Box<StdError + Send + Sync>)","parent":{"krate":0,"index":1132},"children":[],"decl_id":null,"docs":" A custom error kind for use by applications. This error kind involves extra overhead\n because it will allocate the memory on the heap. The WebSocket ignores such errors by\n default, simply passing them to the Connection Handler.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1132},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":14160,"byte_end":14164,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Kind","qualname":"::result::Kind","value":"Kind::{Internal, Capacity, Protocol, Encoding, Io, Http, Queue, Timer, Custom}","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265}],"decl_id":null,"docs":" The type of an error, which may indicate other kinds of errors as the underlying cause.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16700,"byte_end":16705,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Error","qualname":"::result::Error","value":"Error { kind, details }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" A struct indicating the kind of error that has occurred and any precise details of that error.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16716,"byte_end":16720,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"kind","qualname":"::result::Error::kind","value":"result::Kind","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":23},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16736,"byte_end":16743,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"details","qualname":"::result::Error::details","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16792,"byte_end":16795,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn <I> (kind: Kind, details: I) -> Error","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16984,"byte_end":16992,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Error>::into_box","value":"fn (self) -> Box<StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":65241,"byte_end":65248,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306}],"decl_id":null,"docs":" The core trait of this library.\n Implementing this trait provides the business logic of the WebSocket application.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":65366,"byte_end":65377,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"on_shutdown","qualname":"::handler::Handler::on_shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called when a request to shutdown all connections has been received.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":65349,"byte_end":65358,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":65623,"byte_end":65630,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"on_open","qualname":"::handler::Handler::on_open","value":"fn (&mut self, shake: Handshake) -> Result<()>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called when the WebSocket handshake is successful and the connection is open for sending\n and receiving messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":65865,"byte_end":65875,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"on_message","qualname":"::handler::Handler::on_message","value":"fn (&mut self, msg: Message) -> Result<()>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called on incoming messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":66237,"byte_end":66245,"line_start":49,"line_end":49,"column_start":8,"column_end":16},"name":"on_close","qualname":"::handler::Handler::on_close","value":"fn (&mut self, code: CloseCode, reason: &str) -> ()","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called any time this endpoint receives a close control frame.\n This may be because the other endpoint is initiating a closing handshake,\n or it may be the other endpoint confirming the handshake initiated by this endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":66427,"byte_end":66435,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"on_error","qualname":"::handler::Handler::on_error","value":"fn (&mut self, err: Error) -> ()","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called when an error occurs on the WebSocket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":68036,"byte_end":68046,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handler::Handler::on_request","value":"fn (&mut self, req: &Request) -> Result<Response>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A method for handling the low-level workings of the request portion of the WebSocket\n handshake.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":68019,"byte_end":68028,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":68641,"byte_end":68652,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"on_response","qualname":"::handler::Handler::on_response","value":"fn (&mut self, res: &Response) -> Result<()>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A method for handling the low-level workings of the response portion of the WebSocket\n handshake.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":68624,"byte_end":68633,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":69795,"byte_end":69805,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"on_timeout","qualname":"::handler::Handler::on_timeout","value":"fn (&mut self, event: Token) -> Result<()>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called when a timeout is triggered.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":69778,"byte_end":69787,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":71648,"byte_end":71662,"line_start":196,"line_end":196,"column_start":8,"column_end":22},"name":"on_new_timeout","qualname":"::handler::Handler::on_new_timeout","value":"fn (&mut self, _: Token, _: Timeout) -> Result<()>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Called when a timeout has been scheduled on the eventloop.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":71631,"byte_end":71640,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":72486,"byte_end":72494,"line_start":215,"line_end":215,"column_start":8,"column_end":16},"name":"on_frame","qualname":"::handler::Handler::on_frame","value":"fn (&mut self, frame: Frame) -> Result<Option<Frame>>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A method for handling incoming frames.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":72469,"byte_end":72478,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":73839,"byte_end":73852,"line_start":241,"line_end":241,"column_start":8,"column_end":21},"name":"on_send_frame","qualname":"::handler::Handler::on_send_frame","value":"fn (&mut self, frame: Frame) -> Result<Option<Frame>>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A method for handling outgoing frames.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":73822,"byte_end":73831,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":74954,"byte_end":74967,"line_start":269,"line_end":269,"column_start":8,"column_end":21},"name":"build_request","qualname":"::handler::Handler::build_request","value":"fn (&mut self, url: &url::Url) -> Result<Request>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" A method for creating the initial handshake request for WebSocket clients.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":74937,"byte_end":74946,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":78514,"byte_end":78521,"line_start":5,"line_end":5,"column_start":11,"column_end":18},"name":"Factory","qualname":"::factory::Factory","value":"Factory","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360}],"decl_id":null,"docs":" A trait for creating new WebSocket handlers.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":78533,"byte_end":78540,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"Handler","qualname":"::factory::Factory::Handler","value":"type Handler: Handler;","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":78605,"byte_end":78620,"line_start":9,"line_end":9,"column_start":8,"column_end":23},"name":"connection_made","qualname":"::factory::Factory::connection_made","value":"fn (&mut self, _: Sender) -> Self::Handler","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Called when a TCP connection is made.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":78735,"byte_end":78746,"line_start":13,"line_end":13,"column_start":8,"column_end":19},"name":"on_shutdown","qualname":"::factory::Factory::on_shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Called when the WebSocket is shutting down.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":78718,"byte_end":78727,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":79801,"byte_end":79817,"line_start":52,"line_end":52,"column_start":8,"column_end":24},"name":"client_connected","qualname":"::factory::Factory::client_connected","value":"fn (&mut self, ws: Sender) -> Self::Handler","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Called when a new connection is established for a client endpoint.\n This method can be used to differentiate a client aspect for a handler.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":79784,"byte_end":79793,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":80858,"byte_end":80874,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"server_connected","qualname":"::factory::Factory::server_connected","value":"fn (&mut self, ws: Sender) -> Self::Handler","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Called when a new connection is established for a server endpoint.\n This method can be used to differentiate a server aspect for a handler.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":80841,"byte_end":80850,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81307,"byte_end":81322,"line_start":101,"line_end":101,"column_start":8,"column_end":23},"name":"connection_lost","qualname":"::factory::Factory::connection_lost","value":"fn (&mut self, _: Self::Handler) -> ()","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Called when a TCP connection is lost with the handler that was\n setup for that connection.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81290,"byte_end":81299,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":83878,"byte_end":83883,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Frame","qualname":"::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84174,"byte_end":84177,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84153,"byte_end":84162,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84676,"byte_end":84684,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"is_final","qualname":"<Frame>::is_final","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the frame is a final frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84655,"byte_end":84664,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84808,"byte_end":84816,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"has_rsv1","qualname":"<Frame>::has_rsv1","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the first reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84787,"byte_end":84796,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84937,"byte_end":84945,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"has_rsv2","qualname":"<Frame>::has_rsv2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the second reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84916,"byte_end":84925,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85065,"byte_end":85073,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"has_rsv3","qualname":"<Frame>::has_rsv3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the third reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85044,"byte_end":85053,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85178,"byte_end":85184,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"opcode","qualname":"<Frame>::opcode","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" Get the OpCode of the frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85157,"byte_end":85166,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85302,"byte_end":85312,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"is_control","qualname":"<Frame>::is_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether this is a control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85281,"byte_end":85290,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85443,"byte_end":85450,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"fn (&self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85422,"byte_end":85431,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85586,"byte_end":85595,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"is_masked","qualname":"<Frame>::is_masked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85565,"byte_end":85574,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85770,"byte_end":85774,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"mask","qualname":"<Frame>::mask","value":"fn (&self) -> Option<&[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85725,"byte_end":85744,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85749,"byte_end":85758,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85926,"byte_end":85935,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"set_final","qualname":"<Frame>::set_final","value":"fn (&mut self, is_final: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Make this frame a final frame.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85881,"byte_end":85900,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":85905,"byte_end":85914,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86094,"byte_end":86102,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"set_rsv1","qualname":"<Frame>::set_rsv1","value":"fn (&mut self, has_rsv1: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the first reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86073,"byte_end":86082,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86258,"byte_end":86266,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"set_rsv2","qualname":"<Frame>::set_rsv2","value":"fn (&mut self, has_rsv2: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the second reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86237,"byte_end":86246,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86421,"byte_end":86429,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"set_rsv3","qualname":"<Frame>::set_rsv3","value":"fn (&mut self, has_rsv3: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the third reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86400,"byte_end":86409,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86596,"byte_end":86606,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"set_opcode","qualname":"<Frame>::set_opcode","value":"fn (&mut self, opcode: OpCode) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the OpCode.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86551,"byte_end":86570,"line_start":143,"line_end":143,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86575,"byte_end":86584,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86783,"byte_end":86794,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"fn (&mut self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Edit the frame's payload.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86738,"byte_end":86757,"line_start":151,"line_end":151,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":86762,"byte_end":86771,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87170,"byte_end":87178,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"set_mask","qualname":"<Frame>::set_mask","value":"fn (&mut self) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87149,"byte_end":87158,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87502,"byte_end":87513,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"remove_mask","qualname":"<Frame>::remove_mask","value":"fn (&mut self) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87481,"byte_end":87490,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87745,"byte_end":87754,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87860,"byte_end":87867,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"fn (data: Vec<u8>, code: OpCode, finished: bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":87839,"byte_end":87848,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88316,"byte_end":88320,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"fn (data: Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88295,"byte_end":88304,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88539,"byte_end":88543,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"fn (data: Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88518,"byte_end":88527,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88763,"byte_end":88768,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"fn (code: CloseCode, reason: &str) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":88742,"byte_end":88751,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":89203,"byte_end":89208,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"parse","qualname":"<Frame>::parse","value":"fn (cursor: &mut Cursor<Vec<u8>>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the input stream into a frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":92886,"byte_end":92892,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"fn <W> (&mut self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95734,"byte_end":95738,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Text","qualname":"::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95787,"byte_end":95793,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Binary","qualname":"::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1202},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95687,"byte_end":95694,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Message","qualname":"::message::Message","value":"Message::{Text, Binary}","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":321}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95678,"byte_end":95805,"line_start":13,"line_end":18,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95897,"byte_end":95901,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"fn <S> (string: S) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":96090,"byte_end":96096,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"fn <B> (bin: B) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":96265,"byte_end":96272,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":96458,"byte_end":96467,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":96645,"byte_end":96648,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":96948,"byte_end":96956,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":97143,"byte_end":97149,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"opcode","qualname":"<Message>::opcode","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":97357,"byte_end":97366,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":97595,"byte_end":97604,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"fn (self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":97944,"byte_end":97951,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"as_text","qualname":"<Message>::as_text","value":"fn (&self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":101860,"byte_end":101869,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"Handshake","qualname":"::handshake::Handshake","value":"Handshake { request, response, peer_addr, local_addr }","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" A struct representing the two halves of the WebSocket handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":101934,"byte_end":101941,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"name":"request","qualname":"::handshake::Handshake::request","value":"handshake::Request","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The HTTP request sent to begin the handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102028,"byte_end":102036,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"response","qualname":"::handshake::Handshake::response","value":"handshake::Response","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The HTTP response from the server confirming the handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102174,"byte_end":102183,"line_start":80,"line_end":80,"column_start":9,"column_end":18},"name":"peer_addr","qualname":"::handshake::Handshake::peer_addr","value":"std::option::Option<std::net::SocketAddr>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The socket address of the other endpoint. This address may\n be an intermediary such as a proxy server.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102258,"byte_end":102268,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"name":"local_addr","qualname":"::handshake::Handshake::local_addr","value":"std::option::Option<std::net::SocketAddr>","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":" The socket address of this endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102916,"byte_end":102927,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Handshake>::remote_addr","value":"fn (&self) -> Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get the IP address of the remote connection.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102885,"byte_end":102904,"line_start":99,"line_end":99,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":103265,"byte_end":103272,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"Request","qualname":"::handshake::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339}],"decl_id":null,"docs":" The handshake request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":103443,"byte_end":103449,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"header","qualname":"<Request>::header","value":"fn (&self, header: &str) -> Option<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":103734,"byte_end":103744,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Request>::header_mut","value":"fn (&mut self, header: &str) -> Option<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Edit the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104063,"byte_end":104070,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"fn (&self) -> &Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104018,"byte_end":104037,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104042,"byte_end":104051,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104219,"byte_end":104230,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"fn (&mut self) -> &mut Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Edit the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104174,"byte_end":104193,"line_start":147,"line_end":147,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104198,"byte_end":104207,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104409,"byte_end":104415,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"origin","qualname":"<Request>::origin","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the origin of the request if it comes from a browser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104378,"byte_end":104397,"line_start":154,"line_end":154,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104675,"byte_end":104678,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"key","qualname":"<Request>::key","value":"fn (&self) -> Result<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the unhashed WebSocket key sent in the request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":104904,"byte_end":104914,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"hashed_key","qualname":"<Request>::hashed_key","value":"fn (&self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the hashed WebSocket key from this request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105099,"byte_end":105106,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"version","qualname":"<Request>::version","value":"fn (&self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the WebSocket protocol version from the request (should be 13).\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105068,"byte_end":105087,"line_start":175,"line_end":175,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105437,"byte_end":105443,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the request method.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105416,"byte_end":105425,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105573,"byte_end":105581,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"resource","qualname":"<Request>::resource","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the path of the request.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105528,"byte_end":105547,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105552,"byte_end":105561,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105725,"byte_end":105734,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"protocols","qualname":"<Request>::protocols","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the possible protocols for the WebSocket connection.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":105694,"byte_end":105713,"line_start":198,"line_end":198,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":106122,"byte_end":106134,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"add_protocol","qualname":"<Request>::add_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a possible protocol to this request.\n This may result in duplicate protocols listed.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":106091,"byte_end":106110,"line_start":209,"line_end":209,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":106529,"byte_end":106544,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"remove_protocol","qualname":"<Request>::remove_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a possible protocol from this request.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":106498,"byte_end":106517,"line_start":220,"line_end":220,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":107221,"byte_end":107231,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Request>::extensions","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the possible extensions for the WebSocket connection.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":107190,"byte_end":107209,"line_start":239,"line_end":239,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":107774,"byte_end":107787,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"add_extension","qualname":"<Request>::add_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a possible extension to this request.\n This may result in duplicate extensions listed. Also, the order of extensions\n indicates preference, so if the preference matters, consider using the\n `Sec-WebSocket-Protocol` header directly.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":107743,"byte_end":107762,"line_start":252,"line_end":252,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":108228,"byte_end":108244,"line_start":265,"line_end":265,"column_start":12,"column_end":28},"name":"remove_extension","qualname":"<Request>::remove_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a possible extension from this request.\n This will remove all configurations of the extension.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":108197,"byte_end":108216,"line_start":264,"line_end":264,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":109428,"byte_end":109439,"line_start":297,"line_end":297,"column_start":12,"column_end":23},"name":"client_addr","qualname":"<Request>::client_addr","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the IP address of the client.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":109397,"byte_end":109416,"line_start":296,"line_end":296,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":110321,"byte_end":110326,"line_start":320,"line_end":320,"column_start":12,"column_end":17},"name":"parse","qualname":"<Request>::parse","value":"fn (buf: &[u8]) -> Result<Option<Request>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse an HTTP request from a buffer. If the buffer does not contain a complete\n request, this will return `Ok(None)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":110947,"byte_end":110955,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"from_url","qualname":"<Request>::from_url","value":"fn (url: &url::Url) -> Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new WebSocket handshake HTTP request from a url.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":112083,"byte_end":112089,"line_start":372,"line_end":372,"column_start":12,"column_end":18},"name":"format","qualname":"<Request>::format","value":"fn <W> (&self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a request out to a buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":112946,"byte_end":112954,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"Response","qualname":"::handshake::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351}],"decl_id":null,"docs":" The handshake response.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113182,"byte_end":113185,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn <R> (status: u16, reason: R, body: Vec<u8>) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic HTTP response with a body.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113576,"byte_end":113580,"line_start":429,"line_end":429,"column_start":12,"column_end":16},"name":"body","qualname":"<Response>::body","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the response body.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113555,"byte_end":113564,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113985,"byte_end":113995,"line_start":441,"line_end":441,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Response>::header_mut","value":"fn (&mut self, header: &str) -> Option<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Edit the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114314,"byte_end":114321,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn (&self) -> &Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114269,"byte_end":114288,"line_start":449,"line_end":449,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114293,"byte_end":114302,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114470,"byte_end":114481,"line_start":458,"line_end":458,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"fn (&mut self) -> &mut Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Edit the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114425,"byte_end":114444,"line_start":456,"line_end":456,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114449,"byte_end":114458,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114642,"byte_end":114648,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP status code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114597,"byte_end":114616,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114621,"byte_end":114630,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114775,"byte_end":114785,"line_start":472,"line_end":472,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response>::set_status","value":"fn (&mut self, status: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the HTTP status code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114730,"byte_end":114749,"line_start":470,"line_end":470,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114754,"byte_end":114763,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114934,"byte_end":114940,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"reason","qualname":"<Response>::reason","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP status reason.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114889,"byte_end":114908,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":114913,"byte_end":114922,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115072,"byte_end":115082,"line_start":487,"line_end":487,"column_start":12,"column_end":22},"name":"set_reason","qualname":"<Response>::set_reason","value":"fn <R> (&mut self, reason: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the HTTP status reason.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115027,"byte_end":115046,"line_start":485,"line_end":485,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115051,"byte_end":115060,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115236,"byte_end":115239,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"key","qualname":"<Response>::key","value":"fn (&self) -> Result<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the hashed WebSocket key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115484,"byte_end":115492,"line_start":500,"line_end":500,"column_start":12,"column_end":20},"name":"protocol","qualname":"<Response>::protocol","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the protocol that the server has decided to use.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115453,"byte_end":115472,"line_start":499,"line_end":499,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115791,"byte_end":115803,"line_start":510,"line_end":510,"column_start":12,"column_end":24},"name":"set_protocol","qualname":"<Response>::set_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the protocol that the server has decided to use.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":115760,"byte_end":115779,"line_start":509,"line_end":509,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":116248,"byte_end":116258,"line_start":521,"line_end":521,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response>::extensions","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the extensions that the server has decided to use. If these are unacceptable, it is\n appropriate to send an Extension close code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":116217,"byte_end":116236,"line_start":520,"line_end":520,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":116648,"byte_end":116661,"line_start":532,"line_end":532,"column_start":12,"column_end":25},"name":"add_extension","qualname":"<Response>::add_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add an accepted extension to this response.\n This may result in duplicate extensions listed.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":116617,"byte_end":116636,"line_start":531,"line_end":531,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":117104,"byte_end":117120,"line_start":544,"line_end":544,"column_start":12,"column_end":28},"name":"remove_extension","qualname":"<Response>::remove_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove an accepted extension from this response.\n This will remove all configurations of the extension.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":117073,"byte_end":117092,"line_start":543,"line_end":543,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":117825,"byte_end":117830,"line_start":563,"line_end":563,"column_start":12,"column_end":17},"name":"parse","qualname":"<Response>::parse","value":"fn (buf: &[u8]) -> Result<Option<Response>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse an HTTP response from a buffer. If the buffer does not contain a complete\n response, thiw will return `Ok(None)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":118641,"byte_end":118653,"line_start":583,"line_end":583,"column_start":12,"column_end":24},"name":"from_request","qualname":"<Response>::from_request","value":"fn (req: &Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new WebSocket handshake HTTP response from a request.\n This will create a response that ignores protocols and extensions. Edit this response to\n accept a protocol and extensions as necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":119204,"byte_end":119210,"line_start":600,"line_end":600,"column_start":12,"column_end":18},"name":"format","qualname":"<Response>::format","value":"fn <W> (&self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a response out to a buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":357},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122797,"byte_end":122805,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::OpCode::Continue","value":"OpCode::Continue","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a continuation frame of a fragmented message.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":359},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122848,"byte_end":122852,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::OpCode::Text","value":"OpCode::Text","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a text data frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":361},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122897,"byte_end":122903,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::OpCode::Binary","value":"OpCode::Binary","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a binary data frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122950,"byte_end":122955,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::OpCode::Close","value":"OpCode::Close","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a close control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":365},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123001,"byte_end":123005,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::OpCode::Ping","value":"OpCode::Ping","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a ping control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123051,"byte_end":123055,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::OpCode::Pong","value":"OpCode::Pong","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates a pong control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":369},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123111,"byte_end":123114,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::OpCode::Bad","value":"OpCode::Bad","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Indicates an invalid opcode was received.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1240},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122720,"byte_end":122726,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::OpCode","value":"OpCode::{Continue, Text, Binary, Close, Ping, Pong, Bad}","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369}],"decl_id":null,"docs":" Operation codes as part of rfc6455.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122711,"byte_end":123117,"line_start":7,"line_end":22,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":122711,"byte_end":123117,"line_start":7,"line_end":22,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123204,"byte_end":123214,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"is_control","qualname":"<OpCode>::is_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the opcode indicates a control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":371},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124930,"byte_end":124936,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":373},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":125078,"byte_end":125082,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":125186,"byte_end":125194,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":125444,"byte_end":125455,"line_start":100,"line_end":100,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":125672,"byte_end":125678,"line_start":104,"line_end":104,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":126020,"byte_end":126028,"line_start":110,"line_end":110,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":126278,"byte_end":126285,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 [RFC3629]\n data within a text message).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":126642,"byte_end":126648,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":387},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":126804,"byte_end":126808,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127283,"byte_end":127292,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":391},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127470,"byte_end":127475,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":393},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127655,"byte_end":127662,"line_start":140,"line_end":140,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127883,"byte_end":127888,"line_start":144,"line_end":144,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127913,"byte_end":127916,"line_start":146,"line_end":146,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127941,"byte_end":127946,"line_start":148,"line_end":148,"column_start":5,"column_end":10},"name":"Empty","qualname":"::protocol::CloseCode::Empty","value":"CloseCode::Empty","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":401},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":127971,"byte_end":127976,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"Other","qualname":"::protocol::CloseCode::Other","value":"CloseCode::Other(u16)","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1260},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124784,"byte_end":124793,"line_start":86,"line_end":86,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::CloseCode","value":"CloseCode::{Normal, Away, Protocol, Unsupported, Status, Abnormal, Invalid, Policy, Size, Extension, Error, Restart, Again, Tls, Empty, Other}","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124775,"byte_end":127984,"line_start":86,"line_end":151,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124775,"byte_end":127984,"line_start":86,"line_end":151,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":405},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130114,"byte_end":130121,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Message","qualname":"::communication::Signal::Message","value":"Signal::Message(message::Message)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":409},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130145,"byte_end":130150,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Close","qualname":"::communication::Signal::Close","value":"Signal::Close(CloseCode, Cow<'static, str>)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130186,"byte_end":130190,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Ping","qualname":"::communication::Signal::Ping","value":"Signal::Ping(Vec<u8>)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130205,"byte_end":130209,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Pong","qualname":"::communication::Signal::Pong","value":"Signal::Pong(Vec<u8>)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130224,"byte_end":130231,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Connect","qualname":"::communication::Signal::Connect","value":"Signal::Connect(url::Url)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130247,"byte_end":130255,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Shutdown","qualname":"::communication::Signal::Shutdown","value":"Signal::Shutdown","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":429},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130261,"byte_end":130268,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::communication::Signal::Timeout","value":"Signal::Timeout { delay, token }","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":435},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130324,"byte_end":130330,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::communication::Signal::Cancel","value":"Signal::Cancel(mio::timer::Timeout)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1282},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130101,"byte_end":130107,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Signal","qualname":"::communication::Signal","value":"Signal::{Message, Close, Ping, Pong, Connect, Shutdown, Timeout, Cancel}","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130391,"byte_end":130398,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Command","qualname":"::communication::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130492,"byte_end":130497,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"token","qualname":"<Command>::token","value":"fn (&self) -> Token","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130553,"byte_end":130564,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"into_signal","qualname":"<Command>::into_signal","value":"fn (self) -> Signal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130621,"byte_end":130634,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"connection_id","qualname":"<Command>::connection_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130832,"byte_end":130838,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Sender","qualname":"::communication::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449}],"decl_id":null,"docs":" A representation of the output of the WebSocket connection. Use this to send messages to the\n other endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131152,"byte_end":131155,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Sender>::new","value":"fn (token: Token, channel: mio::channel::SyncSender<Command>, connection_id: u32) -> Sender","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131131,"byte_end":131140,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131464,"byte_end":131469,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"token","qualname":"<Sender>::token","value":"fn (&self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" A Token identifying this sender within the WebSocket.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131443,"byte_end":131452,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131609,"byte_end":131622,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"connection_id","qualname":"<Sender>::connection_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" A connection_id identifying this sender within the WebSocket.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131588,"byte_end":131597,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131742,"byte_end":131746,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender>::send","value":"fn <M> (&self, msg: M) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message over the connection.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131721,"byte_end":131730,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":132615,"byte_end":132624,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender>::broadcast","value":"fn <M> (&self, msg: M) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the endpoints of all connections.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":132594,"byte_end":132603,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":132972,"byte_end":132977,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"close","qualname":"<Sender>::close","value":"fn (&self, code: CloseCode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a close code to the other endpoint.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":132951,"byte_end":132960,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":133320,"byte_end":133337,"line_start":131,"line_end":131,"column_start":12,"column_end":29},"name":"close_with_reason","qualname":"<Sender>::close_with_reason","value":"fn <S> (&self, code: CloseCode, reason: S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a close code and provide a descriptive reason for closing.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":133299,"byte_end":133308,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":133739,"byte_end":133743,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"ping","qualname":"<Sender>::ping","value":"fn (&self, data: Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a ping to the other endpoint with the given test data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":133718,"byte_end":133727,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134079,"byte_end":134083,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"pong","qualname":"<Sender>::pong","value":"fn (&self, data: Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a pong to the other endpoint responding with the given test data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134058,"byte_end":134067,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134411,"byte_end":134418,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"connect","qualname":"<Sender>::connect","value":"fn (&self, url: url::Url) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Queue a new connection on this WebSocket to the specified URL.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134390,"byte_end":134399,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134761,"byte_end":134769,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Sender>::shutdown","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Request that all connections terminate and that the WebSocket stop running.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":134740,"byte_end":134749,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":135126,"byte_end":135133,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Sender>::timeout","value":"fn (&self, ms: u64, token: Token) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Schedule a `token` to be sent to the WebSocket Handler's `on_timeout` method\n after `ms` milliseconds\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":135105,"byte_end":135114,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":135767,"byte_end":135773,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"cancel","qualname":"<Sender>::cancel","value":"fn (&self, timeout: mio::timer::Timeout) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Queue the cancellation of a previously scheduled timeout.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":135746,"byte_end":135755,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1042},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.7.6/src/util.rs","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050}],"decl_id":null,"docs":" The util module rexports some tools from mio in order to facilitate handling timeouts.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1050},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,117,116,105,108,46,114,115],"byte_start":183518,"byte_end":183522,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Slab","qualname":"::util::Slab","value":"slab::Slab<T, Token>","parent":null,"children":[],"decl_id":null,"docs":" A Slab allocator for associating tokens to data.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1474,"byte_end":1480,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"listen","qualname":"::listen","value":"fn <A, F, H> (addr: A, factory: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A utility function for setting up a WebSocket server.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2348,"byte_end":2355,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"connect","qualname":"::connect","value":"fn <U, F, H> (url: U, factory: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A utility function for setting up a WebSocket client.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2886,"byte_end":2894,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"Settings","qualname":"::Settings","value":"Settings { max_connections, queue_size, panic_on_new_connection, panic_on_shutdown, fragments_capacity, fragments_grow, fragment_size, in_buffer_capacity, in_buffer_grow, out_buffer_capacity, out_buffer_grow, panic_on_internal, panic_on_capacity, panic_on_protocol, panic_on_encoding, panic_on_queue, panic_on_io, panic_on_timeout, shutdown_on_interrupt, masking_strict, key_strict, method_strict, encrypt_server, tcp_nodelay }","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505}],"decl_id":null,"docs":" WebSocket settings\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2875,"byte_end":8569,"line_start":127,"line_end":233,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":459},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3227,"byte_end":3242,"line_start":133,"line_end":133,"column_start":9,"column_end":24},"name":"max_connections","qualname":"::Settings::max_connections","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The maximum number of connections that this WebSocket will support.\n The default setting is low and should be increased when expecting more\n connections because this is a hard limit and no new connections beyond\n this limit can be made until an old connection is dropped.\n Default: 100\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":461},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3806,"byte_end":3816,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"queue_size","qualname":"::Settings::queue_size","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The number of events anticipated per connection. The event loop queue size will\n be `queue_size` * `max_connections`. In order to avoid an overflow error,\n `queue_size` * `max_connections` must be less than or equal to `usize::max_value()`.\n The queue is shared between connections, which means that a connection may schedule\n more events than `queue_size` provided that another connection is using less than\n `queue_size`. However, if the queue is maxed out a Queue error will occur.\n Default: 5\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":463},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3928,"byte_end":3951,"line_start":144,"line_end":144,"column_start":9,"column_end":32},"name":"panic_on_new_connection","qualname":"::Settings::panic_on_new_connection","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when unable to establish a new TCP connection.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":465},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4062,"byte_end":4079,"line_start":147,"line_end":147,"column_start":9,"column_end":26},"name":"panic_on_shutdown","qualname":"::Settings::panic_on_shutdown","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when a shutdown of the WebSocket is requested.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":467},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4203,"byte_end":4221,"line_start":150,"line_end":150,"column_start":9,"column_end":27},"name":"fragments_capacity","qualname":"::Settings::fragments_capacity","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The maximum number of fragments the connection can handle without reallocating.\n Default: 10\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4398,"byte_end":4412,"line_start":154,"line_end":154,"column_start":9,"column_end":23},"name":"fragments_grow","qualname":"::Settings::fragments_grow","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to reallocate when `fragments_capacity` is reached. If this is false,\n a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4545,"byte_end":4558,"line_start":157,"line_end":157,"column_start":9,"column_end":22},"name":"fragment_size","qualname":"::Settings::fragment_size","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The maximum length of outgoing frames. Messages longer than this will be fragmented.\n Default: 65,535\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":473},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4719,"byte_end":4737,"line_start":161,"line_end":161,"column_start":9,"column_end":27},"name":"in_buffer_capacity","qualname":"::Settings::in_buffer_capacity","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The size of the incoming buffer. A larger buffer uses more memory but will allow for fewer\n reallocations.\n Default: 2048\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4934,"byte_end":4948,"line_start":165,"line_end":165,"column_start":9,"column_end":23},"name":"in_buffer_grow","qualname":"::Settings::in_buffer_grow","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to reallocate the incoming buffer when `in_buffer_capacity` is reached. If this is\n false, a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":477},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5108,"byte_end":5127,"line_start":169,"line_end":169,"column_start":9,"column_end":28},"name":"out_buffer_capacity","qualname":"::Settings::out_buffer_capacity","value":"usize","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The size of the outgoing buffer. A larger buffer uses more memory but will allow for fewer\n reallocations.\n Default: 2048\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":479},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5325,"byte_end":5340,"line_start":173,"line_end":173,"column_start":9,"column_end":24},"name":"out_buffer_grow","qualname":"::Settings::out_buffer_grow","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to reallocate the incoming buffer when `out_buffer_capacity` is reached. If this is\n false, a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":481},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5624,"byte_end":5641,"line_start":178,"line_end":178,"column_start":9,"column_end":26},"name":"panic_on_internal","qualname":"::Settings::panic_on_internal","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when an Internal error is encountered. Internal errors should generally\n not occur, so this setting defaults to true as a debug measure, whereas production\n applications should consider setting it to false.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":483},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5743,"byte_end":5760,"line_start":181,"line_end":181,"column_start":9,"column_end":26},"name":"panic_on_capacity","qualname":"::Settings::panic_on_capacity","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when a Capacity error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5862,"byte_end":5879,"line_start":184,"line_end":184,"column_start":9,"column_end":26},"name":"panic_on_protocol","qualname":"::Settings::panic_on_protocol","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when a Protocol error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5982,"byte_end":5999,"line_start":187,"line_end":187,"column_start":9,"column_end":26},"name":"panic_on_encoding","qualname":"::Settings::panic_on_encoding","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when an Encoding error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6098,"byte_end":6112,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"name":"panic_on_queue","qualname":"::Settings::panic_on_queue","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when a Queue error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6209,"byte_end":6220,"line_start":193,"line_end":193,"column_start":9,"column_end":20},"name":"panic_on_io","qualname":"::Settings::panic_on_io","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when an Io error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6319,"byte_end":6335,"line_start":196,"line_end":196,"column_start":9,"column_end":25},"name":"panic_on_timeout","qualname":"::Settings::panic_on_timeout","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to panic when a Timer error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":495},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6446,"byte_end":6467,"line_start":199,"line_end":199,"column_start":9,"column_end":30},"name":"shutdown_on_interrupt","qualname":"::Settings::shutdown_on_interrupt","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Whether to shutdown the eventloop when an interrupt is received.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":497},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6788,"byte_end":6802,"line_start":204,"line_end":204,"column_start":9,"column_end":23},"name":"masking_strict","qualname":"::Settings::masking_strict","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires frames sent from client endpoints to be masked as a\n security and sanity precaution. Enforcing this requirement, which may be removed at some\n point may cause incompatibilities. If you need the extra security, set this to true.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":499},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7314,"byte_end":7324,"line_start":211,"line_end":211,"column_start":9,"column_end":19},"name":"key_strict","qualname":"::Settings::key_strict","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires clients to verify the key returned by a server to ensure\n that the server and all intermediaries can perform the protocol. Verifying the key will\n consume processing time and other resources with the benefit that we can fail the\n connection early. The default in WS-RS is to accept any key from the server and instead\n fail late if a protocol error occurs. Change this setting to enable key verification.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7728,"byte_end":7741,"line_start":217,"line_end":217,"column_start":9,"column_end":22},"name":"method_strict","qualname":"::Settings::method_strict","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires clients to perform an opening handshake using the HTTP\n GET method for the request. However, since only WebSockets are supported on the connection,\n verifying the method of handshake requests is not always necessary. To enforce the\n requirement that handshakes begin with a GET method, set this to true.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":503},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8284,"byte_end":8298,"line_start":226,"line_end":226,"column_start":9,"column_end":23},"name":"encrypt_server","qualname":"::Settings::encrypt_server","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Indicate whether server connections should use ssl encryption when accepting connections.\n Setting this to true means that clients should use the `wss` scheme to connect to this\n server. Note that using this flag will in general necessitate overriding the\n `Handler::upgrade_ssl_server` method in order to provide the details of the ssl context. It may be\n simpler for most users to use a reverse proxy such as nginx to provide server side\n encryption.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8550,"byte_end":8561,"line_start":232,"line_end":232,"column_start":9,"column_end":20},"name":"tcp_nodelay","qualname":"::Settings::tcp_nodelay","value":"bool","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":" Disables Nagle's algorithm.\n Usually tcp socket tries to accumulate packets to send them all together (every 200ms).\n When enabled socket will try to send packet as fast as possible.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9650,"byte_end":9659,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225}],"decl_id":null,"docs":" The WebSocket struct. A WebSocket can support multiple incoming and outgoing connections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9864,"byte_end":9867,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocket<F>>::new","value":"fn (factory: F) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebSocket using the given Factory to create handlers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10304,"byte_end":10308,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"bind","qualname":"<WebSocket<F>>::bind","value":"fn <A> (mut self, addr_spec: A) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and bind to the specified address.\n If the `addr_spec` yields multiple addresses this will return after the\n first successful bind. `local_addr` can be called to determine which\n address it ended up binding to.\n After the server is successfully bound you should start it using `run`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11161,"byte_end":11167,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"listen","qualname":"<WebSocket<F>>::listen","value":"fn <A> (self, addr_spec: A) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and listen for new connections on the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11511,"byte_end":11518,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"connect","qualname":"<WebSocket<F>>::connect","value":"fn (&mut self, url: url::Url) -> Result<&mut WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Queue an outgoing connection on this WebSocket. This method may be called multiple times,\n but the actual connections will not be established until `run` is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11876,"byte_end":11879,"line_start":330,"line_end":330,"column_start":12,"column_end":15},"name":"run","qualname":"<WebSocket<F>>::run","value":"fn (mut self) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Run the WebSocket. This will run the encapsulated event loop blocking the calling thread until\n the WebSocket is shutdown.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12288,"byte_end":12299,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"broadcaster","qualname":"<WebSocket<F>>::broadcaster","value":"fn (&self) -> Sender","parent":null,"children":[],"decl_id":null,"docs":" Get a Sender that can be used to send messages on all connections.\n Calling `send` on this Sender is equivalent to calling `broadcast`.\n Calling `shutdown` on this Sender will shutdown the WebSocket even if no connections have\n been established.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12267,"byte_end":12276,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12575,"byte_end":12585,"line_start":347,"line_end":347,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<WebSocket<F>>::local_addr","value":"fn (&self) -> ::std::io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local socket address this socket is bound to. Will return an error\n if the backend returns an error. Will return a `NotFound` error if\n this WebSocket is not a listening socket.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12776,"byte_end":12783,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":507}],"decl_id":null,"docs":" Utility for constructing a WebSocket from various settings.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12765,"byte_end":12811,"line_start":354,"line_end":356,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12941,"byte_end":12944,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new Builder with default settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13187,"byte_end":13192,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn <F> (&self, factory: F) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Build a WebSocket using this builder and a factory.\n It is possible to use the same builder to create multiple WebSockets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13465,"byte_end":13478,"line_start":379,"line_end":379,"column_start":12,"column_end":25},"name":"with_settings","qualname":"<Builder>::with_settings","value":"fn (&mut self, settings: Settings) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the WebSocket settings to use.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16772,"byte_end":16777,"line_start":73,"line_end":73,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17154,"byte_end":17159,"line_start":92,"line_end":92,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17437,"byte_end":17442,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17709,"byte_end":17714,"line_start":113,"line_end":113,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19097,"byte_end":19102,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19222,"byte_end":19227,"line_start":153,"line_end":153,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19977,"byte_end":19982,"line_start":171,"line_end":171,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20242,"byte_end":20247,"line_start":182,"line_end":182,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20418,"byte_end":20423,"line_start":192,"line_end":192,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20844,"byte_end":20849,"line_start":212,"line_end":212,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":22076,"byte_end":22081,"line_start":49,"line_end":49,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":22975,"byte_end":22985,"line_start":100,"line_end":100,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":76360,"byte_end":76361,"line_start":303,"line_end":303,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":76811,"byte_end":76812,"line_start":324,"line_end":324,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81387,"byte_end":81388,"line_start":106,"line_end":106,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81917,"byte_end":81918,"line_start":131,"line_end":131,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84033,"byte_end":84038,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":94240,"byte_end":94245,"line_start":412,"line_end":412,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":94528,"byte_end":94533,"line_start":426,"line_end":426,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95812,"byte_end":95819,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98143,"byte_end":98150,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98261,"byte_end":98268,"line_start":111,"line_end":111,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98381,"byte_end":98388,"line_start":118,"line_end":118,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98495,"byte_end":98502,"line_start":125,"line_end":125,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98607,"byte_end":98614,"line_start":132,"line_end":132,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102298,"byte_end":102307,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":103358,"byte_end":103365,"line_start":121,"line_end":121,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":112484,"byte_end":112491,"line_start":387,"line_end":387,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113058,"byte_end":113066,"line_start":412,"line_end":412,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":119640,"byte_end":119648,"line_start":615,"line_end":615,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123124,"byte_end":123130,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123366,"byte_end":123372,"line_start":36,"line_end":36,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123828,"byte_end":123834,"line_start":50,"line_end":50,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124342,"byte_end":124348,"line_start":68,"line_end":68,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":128005,"byte_end":128014,"line_start":153,"line_end":153,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":128677,"byte_end":128686,"line_start":177,"line_end":177,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130471,"byte_end":130478,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130953,"byte_end":130959,"line_start":59,"line_end":59,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131098,"byte_end":131104,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,105,111,46,114,115],"byte_start":137592,"byte_end":137597,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,105,111,46,114,115],"byte_start":138189,"byte_end":138196,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":173948,"byte_end":173949,"line_start":62,"line_end":62,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":173988,"byte_end":173989,"line_start":63,"line_end":63,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":174107,"byte_end":174113,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":175827,"byte_end":175833,"line_start":137,"line_end":137,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":178305,"byte_end":178311,"line_start":187,"line_end":187,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8588,"byte_end":8596,"line_start":235,"line_end":235,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9742,"byte_end":9751,"line_start":276,"line_end":276,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12868,"byte_end":12875,"line_start":359,"line_end":359,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":655,"byte_end":659,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1042}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":16772,"byte_end":16777,"line_start":73,"line_end":73,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17154,"byte_end":17159,"line_start":92,"line_end":92,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17437,"byte_end":17442,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":17709,"byte_end":17714,"line_start":113,"line_end":113,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":52},"to":{"krate":1,"index":2388}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19097,"byte_end":19102,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19222,"byte_end":19227,"line_start":153,"line_end":153,"column_start":32,"column_end":37},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":19977,"byte_end":19982,"line_start":171,"line_end":171,"column_start":49,"column_end":54},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20242,"byte_end":20247,"line_start":182,"line_end":182,"column_start":39,"column_end":44},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20418,"byte_end":20423,"line_start":192,"line_end":192,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,114,101,115,117,108,116,46,114,115],"byte_start":20844,"byte_end":20849,"line_start":212,"line_end":212,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":52},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":22076,"byte_end":22081,"line_start":49,"line_end":49,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,110,110,101,99,116,105,111,110,46,114,115],"byte_start":22975,"byte_end":22985,"line_start":100,"line_end":100,"column_start":9,"column_end":19},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":76360,"byte_end":76361,"line_start":303,"line_end":303,"column_start":21,"column_end":22},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":65},"to":{"krate":0,"index":282}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,108,101,114,46,114,115],"byte_start":76811,"byte_end":76812,"line_start":324,"line_end":324,"column_start":22,"column_end":23},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1164},"to":{"krate":0,"index":282}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81387,"byte_end":81388,"line_start":106,"line_end":106,"column_start":24,"column_end":25},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":67},"to":{"krate":0,"index":348}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,97,99,116,111,114,121,46,114,115],"byte_start":81917,"byte_end":81918,"line_start":131,"line_end":131,"column_start":22,"column_end":23},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":1178},"to":{"krate":0,"index":282}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":84033,"byte_end":84038,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":94240,"byte_end":94245,"line_start":412,"line_end":412,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,102,114,97,109,101,46,114,115],"byte_start":94528,"byte_end":94533,"line_start":426,"line_end":426,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":95812,"byte_end":95819,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98143,"byte_end":98150,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98261,"byte_end":98268,"line_start":111,"line_end":111,"column_start":28,"column_end":35},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98381,"byte_end":98388,"line_start":118,"line_end":118,"column_start":29,"column_end":36},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98495,"byte_end":98502,"line_start":125,"line_end":125,"column_start":24,"column_end":31},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,109,101,115,115,97,103,101,46,114,115],"byte_start":98607,"byte_end":98614,"line_start":132,"line_end":132,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":102298,"byte_end":102307,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":103358,"byte_end":103365,"line_start":121,"line_end":121,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":112484,"byte_end":112491,"line_start":387,"line_end":387,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":113058,"byte_end":113066,"line_start":412,"line_end":412,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,104,97,110,100,115,104,97,107,101,46,114,115],"byte_start":119640,"byte_end":119648,"line_start":615,"line_end":615,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123124,"byte_end":123130,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123366,"byte_end":123372,"line_start":36,"line_end":36,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":123828,"byte_end":123834,"line_start":50,"line_end":50,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":124342,"byte_end":124348,"line_start":68,"line_end":68,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":128005,"byte_end":128014,"line_start":153,"line_end":153,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,112,114,111,116,111,99,111,108,46,114,115],"byte_start":128677,"byte_end":128686,"line_start":177,"line_end":177,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":2660}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130471,"byte_end":130478,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":130953,"byte_end":130959,"line_start":59,"line_end":59,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,99,111,109,109,117,110,105,99,97,116,105,111,110,46,114,115],"byte_start":131098,"byte_end":131104,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,105,111,46,114,115],"byte_start":137592,"byte_end":137597,"line_start":65,"line_end":65,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,105,111,46,114,115],"byte_start":138189,"byte_end":138196,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":172933,"byte_end":172937,"line_start":29,"line_end":29,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":4218},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":173634,"byte_end":173639,"line_start":48,"line_end":48,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":4250},"to":{"krate":0,"index":1006}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":173948,"byte_end":173949,"line_start":62,"line_end":62,"column_start":34,"column_end":35},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":201},"to":{"krate":0,"index":1002}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":173988,"byte_end":173989,"line_start":63,"line_end":63,"column_start":36,"column_end":37},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":203},"to":{"krate":0,"index":1006}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":174107,"byte_end":174113,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":175827,"byte_end":175833,"line_start":137,"line_end":137,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":4218}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":178305,"byte_end":178311,"line_start":187,"line_end":187,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1016},"to":{"krate":1,"index":4250}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8588,"byte_end":8596,"line_start":235,"line_end":235,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9742,"byte_end":9751,"line_start":276,"line_end":276,"column_start":9,"column_end":18},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,115,45,48,46,55,46,54,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12868,"byte_end":12875,"line_start":359,"line_end":359,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}}]}