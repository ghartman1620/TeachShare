{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"utf8_ranges","disambiguator":[8781510316182638942,5844516805939472892]},"crate_root":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src","external_crates":[{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15457747332785279848,2321850194859987339]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15868474213044323624,2444462643878075336]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8458891086083892067,8748117807113040734]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[767489389527341057,5235531157453730766]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[18110415425518651545,18006836507566872508]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7789913747131704681,15383421434934411168]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13641195905247684855,10390215052031693935]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[6546252056220169788,18379399819183232084]}},{"file_name":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[18001143091758731311,4733760878430807864]}}],"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":17228,"line_start":1,"line_end":527,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":17228,"line_start":1,"line_end":527,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/bryan/.cargo/registry/src/github.com-1ecc6299db9ec823/utf8-ranges-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":106},{"krate":0,"index":122},{"krate":0,"index":118},{"krate":0,"index":114},{"krate":0,"index":108},{"krate":0,"index":34},{"krate":0,"index":46},{"krate":0,"index":54},{"krate":0,"index":124},{"krate":0,"index":138},{"krate":0,"index":136},{"krate":0,"index":130},{"krate":0,"index":126},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":104}],"decl_id":null,"docs":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3220,"byte_end":3242,"line_start":90,"line_end":90,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":31},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3791,"byte_end":3794,"line_start":114,"line_end":114,"column_start":5,"column_end":8},"name":"One","qualname":"::Utf8Sequence::One","value":"Utf8Sequence::One(Utf8Range)","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" One byte range.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":35},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3847,"byte_end":3850,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"Two","qualname":"::Utf8Sequence::Two","value":"Utf8Sequence::Two([Utf8Range; 2])","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Two successive byte ranges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":39},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3910,"byte_end":3915,"line_start":118,"line_end":118,"column_start":5,"column_end":10},"name":"Three","qualname":"::Utf8Sequence::Three","value":"Utf8Sequence::Three([Utf8Range; 3])","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Three successive byte ranges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3974,"byte_end":3978,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Four","qualname":"::Utf8Sequence::Four","value":"Utf8Sequence::Four([Utf8Range; 4])","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Four successive byte ranges.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3748,"byte_end":3760,"line_start":112,"line_end":112,"column_start":10,"column_end":22},"name":"Utf8Sequence","qualname":"::Utf8Sequence","value":"Utf8Sequence::{One, Two, Three, Four}","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":43}],"decl_id":null,"docs":" Utf8Sequence represents a sequence of byte ranges.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3739,"byte_end":3997,"line_start":112,"line_end":121,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3739,"byte_end":3997,"line_start":112,"line_end":121,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5091,"byte_end":5099,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf8Sequence>::as_slice","value":"fn (&self) -> &[Utf8Range]","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying sequence of byte ranges as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5521,"byte_end":5524,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf8Sequence>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of byte ranges in this sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5693,"byte_end":5700,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"matches","qualname":"<Utf8Sequence>::matches","value":"fn (&self, bytes: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if a prefix of `bytes` matches this sequence\n of byte ranges.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6736,"byte_end":6745,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"Utf8Range","qualname":"::Utf8Range","value":"Utf8Range { start, end }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":67}],"decl_id":null,"docs":" A single inclusive range of UTF-8 bytes.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6725,"byte_end":6865,"line_start":207,"line_end":212,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6725,"byte_end":6865,"line_start":207,"line_end":212,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6797,"byte_end":6802,"line_start":209,"line_end":209,"column_start":9,"column_end":14},"name":"start","qualname":"::Utf8Range::start","value":"u8","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Start of byte range (inclusive).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6855,"byte_end":6858,"line_start":211,"line_end":211,"column_start":9,"column_end":12},"name":"end","qualname":"::Utf8Range::end","value":"u8","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" End of byte range (inclusive).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7057,"byte_end":7064,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"matches","qualname":"<Utf8Range>::matches","value":"fn (&self, b: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given byte is in this range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9406,"byte_end":9419,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"Utf8Sequences","qualname":"::Utf8Sequences","value":"Utf8Sequences {  }","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" An iterator over ranges of matching UTF-8 byte sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9587,"byte_end":9590,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<Utf8Sequences>::new","value":"fn (start: char, end: char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator over UTF-8 byte ranges for the scalar value range\n given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9954,"byte_end":9959,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"reset","qualname":"<Utf8Sequences>::reset","value":"fn (&mut self, start: char, end: char) -> ()","parent":null,"children":[],"decl_id":null,"docs":" reset resets the scalar value range.\n Any existing state is cleared, but resources may be reused.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4004,"byte_end":4016,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6194,"byte_end":6206,"line_start":192,"line_end":192,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6872,"byte_end":6881,"line_start":214,"line_end":214,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7159,"byte_end":7168,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9465,"byte_end":9478,"line_start":289,"line_end":289,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10284,"byte_end":10295,"line_start":318,"line_end":318,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10451,"byte_end":10464,"line_start":324,"line_end":324,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12400,"byte_end":12411,"line_start":378,"line_end":378,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4004,"byte_end":4016,"line_start":123,"line_end":123,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6194,"byte_end":6206,"line_start":192,"line_end":192,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":106},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6872,"byte_end":6881,"line_start":214,"line_end":214,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7159,"byte_end":7168,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":124},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9465,"byte_end":9478,"line_start":289,"line_end":289,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10284,"byte_end":10295,"line_start":318,"line_end":318,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":80},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10451,"byte_end":10464,"line_start":324,"line_end":324,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":70},"to":{"krate":2,"index":3842}},{"span":{"file_name":[47,104,111,109,101,47,98,114,121,97,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,116,102,56,45,114,97,110,103,101,115,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12400,"byte_end":12411,"line_start":378,"line_end":378,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}}]}