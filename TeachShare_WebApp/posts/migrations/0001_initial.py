# Generated by Django 2.0.3 on 2018-05-27 20:02

import datetime
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import posts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=posts.models.upload_to)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practices', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(-1, 'not science'), (0, 'Asking questions and defining problems'), (1, 'Developing and using models'), (2, 'Planning and carrying out investigations'), (3, 'Analyzing and interpreting data'), (4, 'Using mathematics and computational thinking'), (5, 'Constructing explanations and designing solutions'), (6, 'Engaging in argument from evidence'), (7, 'Obtaining, evaluating, and communicating information')], default=-1), blank=True, default=[], size=None)),
                ('crosscutting_concepts', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(0, 'Patterns'), (1, 'Cause and Effect'), (2, 'Scale, Proportion, and Quantity'), (3, 'Systems and System Models'), (4, 'Energy and Matter'), (5, 'Structure and Function'), (6, 'Stability and Change'), (7, 'Interdependence of Science, Engineering, and Technology'), (8, 'Influence of Engineering, Technology,     and Science on Society and the Natural World')], default=-1), blank=True, default=[], size=None)),
                ('disciplinary_core_ideas', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(-1, 'not science'), (0, 'PS1A: Structure and properties of matter'), (1, 'PS1B: Chemical Reactions'), (2, 'PS1C: Nuclear Processes'), (3, 'PS2A: Forces and Motion'), (4, 'PS2B: Types of Interactions'), (5, 'PS3A: Definitions of Energy'), (6, 'PS3B: Conservation of Energy and Energy Transfer'), (7, 'PS3C: Relationship Between Energy and Forces'), (8, 'PS3D: Energy in Chemical Processes and Everday Life'), (9, 'PS4A: Wave Properties'), (10, 'PS4B: Electromagnetic Radiation'), (11, 'PS4C: Information Technologies and Instrumentation'), (12, 'LS1A: Structure and Function'), (13, 'LS1B: Growth and Development of Organisms'), (14, 'LS1C: Organization for Matter and Energy Flow in Organisms'), (15, 'LS1D: Information Processing'), (16, 'LS2A: Interdependent Relationships in Ecosystems'), (17, 'LS2B: Cycles of Matter and Energy Transfer in Ecosystems'), (18, 'LS2C: Ecosystems Dynamics, Functioning and Resilience'), (19, 'LS2D: Social Interactions and Group Behavior'), (20, 'LS3A: Inheritance of Traits'), (21, 'LS3B: Variation of Traits'), (22, 'LS4A: Evidence of Common Ancestry and Diversity'), (23, 'LS4B: Natural Selection'), (24, 'LS4C: Adaptation'), (25, 'LS4D: Biodiversity and Humans'), (26, 'ESS1A: The Universe and its Stars'), (27, 'ESS1B: Earth and the Solar System'), (28, 'ESS1C: The History of Planet Earth'), (29, 'ESS2A: Earth Materials and Systems'), (30, 'ESS2B: Plate Tectonics and Large-Scale Systems'), (31, 'ESS2C: The Role of Water in Earthâ€™s Surface Processes'), (32, 'ESS2D: Weather and Climate'), (33, 'ESS2E: Biogeology'), (34, 'ESS3A: Natural Resources'), (35, 'ESS3B: Natural Hazards'), (36, 'ESS3C: Human Impacts on Earth Systems'), (37, 'ESS3D: Global Climate Change'), (38, 'ETS1A: Defining and Delimiting and Engineering Problem'), (39, 'ETS1B: Developing Possible Solutions'), (40, 'ETS1C: Optimizing the Design Solution')], default=-1), blank=True, default=[], size=None)),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('content', django.contrib.postgres.fields.jsonb.JSONField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('likes', models.IntegerField(default=0)),
                ('draft', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('tags', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=[])),
                ('color', models.CharField(blank=True, default='#96e6b3', max_length=7)),
                ('layout', django.contrib.postgres.fields.jsonb.JSONField(default=[{'h': 30, 'i': '0', 'w': 2, 'x': 0, 'y': 0}])),
                ('grade', models.IntegerField(choices=[(0, 'Preschool'), (1, 'Kindergarten'), (2, 'First Grade'), (3, 'Second Grade'), (4, 'Third Grade'), (5, 'Fourth Grade'), (6, 'Fifth Grade'), (7, 'Sixth Grade'), (8, 'Seventh Grade'), (9, 'Eighth Grade'), (10, 'High School')], default=0)),
                ('subject', models.IntegerField(choices=[(0, 'Math'), (1, 'English Language Arts'), (2, 'Physical Sciences'), (3, 'Life Sciences'), (4, 'Earth and Space Sciences'), (5, 'Engineering, Technology, and the Applications of Science')], default=0)),
                ('length', models.DurationField(blank=True, default=datetime.timedelta(0))),
                ('content_type', models.IntegerField(choices=[(0, 'Game'), (1, 'Lab'), (2, 'Lecture')], default=0)),
                ('original_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.Post')),
                ('original_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_post', 'Can view post'),),
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('code', models.CharField(default='', max_length=100)),
                ('category', models.CharField(default='', max_length=100)),
                ('grade', models.IntegerField(choices=[(0, 'Preschool'), (1, 'Kindergarten'), (2, 'First Grade'), (3, 'Second Grade'), (4, 'Third Grade'), (5, 'Fourth Grade'), (6, 'Fifth Grade'), (7, 'Sixth Grade'), (8, 'Seventh Grade'), (9, 'Eighth Grade'), (10, 'High School')])),
                ('description', models.TextField(default='')),
                ('subject', models.IntegerField(choices=[(0, 'Math'), (1, 'English Language Arts'), (2, 'Physical Sciences'), (3, 'Life Sciences'), (4, 'Earth and Space Sciences'), (5, 'Engineering, Technology, and the Applications of Science')], default=0)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='standards',
            field=models.ManyToManyField(blank=True, to='posts.Standard'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attachment',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachments', to='posts.Post'),
        ),
    ]
