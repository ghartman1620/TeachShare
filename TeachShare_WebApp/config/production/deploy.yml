# NOT CURRENTLY USED
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "teach-web"
  namespace: "default"
  labels:
    app: "teach-web"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "teach-web"
  template:
    metadata:
      labels:
        app: "teach-web"
    spec:
      containers:
      - name: "teachshare-web"
        image: "gcr.io/teach-share-200700/teachshare_web:v1"
        command:
        - "python"

# Current, auto-generated
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: 2018-04-10T05:53:57Z
  generation: 11
  labels:
    app: web
  name: web
  namespace: default
  resourceVersion: "46675"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/web
  uid: 8f53a573-3c83-11e8-8f44-42010a8a01c1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - image: gcr.io/teach-share-200700/teachshare_web:v3
        imagePullPolicy: Always
        name: teachshare-web
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

# I don't think you'd actually use this to deploy
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-04-10T05:58:51Z
    lastUpdateTime: 2018-04-10T05:58:51Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 11
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1