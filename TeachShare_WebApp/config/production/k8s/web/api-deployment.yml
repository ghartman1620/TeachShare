apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  labels:
    app: api
  name: api-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
        type: deployment
    spec:
      containers:
      - image: gcr.io/teach-share-200700/teachshare_web:1.0.0
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8000
        env:
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: password
      #   volumeMounts:
      #   - mountPath: /code
      #     name: api-claim-main
      #   - mountPath: /code/static
      #     name: api-claim-static
      #   - mountPath: /code/media
      #     name: api-claim-media
      - image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=teach-share-200700:us-west1:teach-db=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
      # volumes:
      # - name: api-claim-main
      #   persistentVolumeClaim:
      #     claimName: api-claim-main
      # - name: api-claim-static
      #   persistentVolumeClaim:
      #     claimName: api-claim-static
      # - name: api-claim-media
      #   persistentVolumeClaim:
      #     claimName: api-claim-media
status: {}
