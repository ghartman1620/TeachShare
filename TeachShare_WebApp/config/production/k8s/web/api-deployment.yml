apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations: {deployment.kubernetes.io/revision: '1'}
  creationTimestamp: null
  labels: {app: api}
  name: api-production
spec:
  replicas: 1
  selector:
    matchLabels: {app: api}
  strategy:
    rollingUpdate: {maxSurge: 1, maxUnavailable: 2}
    type: RollingUpdate
  template:
    metadata:
      labels: {app: api, type: deployment}
    spec:
      containers:
      - env:
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef: {key: username, name: cloudsql}
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef: {key: password, name: cloudsql}
        image: gcr.io/teach-share-200700/teachshare_web:1.0.2
        imagePullPolicy: Always
        name: api
        ports:
        - {containerPort: 8000}
      - command: [/cloud_sql_proxy, --dir=/cloudsql, '-instances=teach-share-200700:us-west1:teach-db=tcp:5432',
          -credential_file=/secrets/cloudsql/credentials.json]
        image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
        name: cloudsql-proxy
        volumeMounts:
        - {mountPath: /secrets/cloudsql, name: cloudsql-oauth-credentials, readOnly: true}
        - {mountPath: /etc/ssl/certs, name: ssl-certs}
        - {mountPath: /cloudsql, name: cloudsql}
      volumes:
      - name: cloudsql-oauth-credentials
        secret: {secretName: cloudsql-oauth-credentials}
      - hostPath: {path: /etc/ssl/certs}
        name: ssl-certs
      - {emptyDir: null, name: cloudsql}
status: {}
