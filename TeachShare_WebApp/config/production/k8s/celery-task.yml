apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations: {deployment.kubernetes.io/revision: '1'}
  creationTimestamp: 2018-04-16 23:28:23
  generation: 1
  labels: {app: task}
  name: celery-task
  namespace: default
  resourceVersion: '263855'
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/celery-task
  uid: db1590b9-41cd-11e8-be31-42010a8a0192
spec:
  replicas: 1
  selector:
    matchLabels: {app: task}
  strategy:
    rollingUpdate: {maxSurge: 1, maxUnavailable: 2}
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels: {app: task, type: deployment}
    spec:
      containers:
      - env:
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef: {key: username, name: cloudsql}
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef: {key: password, name: cloudsql}
        image: gcr.io/teach-share-200700/teachshare_task:1.0.2
        imagePullPolicy: Always
        name: task
        ports:
        - {containerPort: 8000, protocol: TCP}
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command: [/cloud_sql_proxy, --dir=/cloudsql, '-instances=teach-share-200700:us-west1:teach-db=tcp:5432',
          -credential_file=/secrets/cloudsql/credentials.json]
        image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
        imagePullPolicy: IfNotPresent
        name: cloudsql-proxy
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - {mountPath: /secrets/cloudsql, name: cloudsql-oauth-credentials, readOnly: true}
        - {mountPath: /etc/ssl/certs, name: ssl-certs}
        - {mountPath: /cloudsql, name: cloudsql}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloudsql-oauth-credentials
        secret: {defaultMode: 420, secretName: cloudsql-oauth-credentials}
      - hostPath: {path: /etc/ssl/certs, type: ''}
        name: ssl-certs
      - emptyDir: {}
        name: cloudsql
status:
  availableReplicas: 1
  conditions:
  - {lastTransitionTime: !!timestamp '2018-04-16 23:28:23', lastUpdateTime: !!timestamp '2018-04-16
      23:28:23', message: Deployment has minimum availability., reason: MinimumReplicasAvailable,
    status: 'True', type: Available}
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
